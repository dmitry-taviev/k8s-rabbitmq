apiVersion: apps/v1alpha1
kind: PetSet
metadata:
  name: rabbitmq-ps
spec:
  serviceName: rabbitmq-resolver
  replicas: 1
  template:
    metadata:
      labels:
        name: rabbitmq-ps
        tier: backend
        role: queue
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      containers:
      - env:
        - name: CLUSTER_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CLUSTER_DNS
          value: rabbitmq-resolver
        - name: CLUSTER_WITH
          value: rabbitmq-ps-0
        image: 944590742144.dkr.ecr.eu-west-1.amazonaws.com/apply/smart-rabbitmq:latest
        name: rabbitmq
        ports:
        - containerPort: 5672
          protocol: TCP
        - containerPort: 15672
          protocol: TCP
        - containerPort: 4369
          protocol: TCP
        - containerPort: 25672
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 500Mi
        volumeMounts:
        - mountPath: /var/lib/rabbitmq/mnesia/
          name: rabbitmq-persistent-storage
      imagePullSecrets:
        - name: registry-key
      nodeSelector:
        beta.kubernetes.io/instance-type: t2.medium
  volumeClaimTemplates:
  - metadata:
      name: rabbitmq-persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10G
      selector:
        matchLabels:
          name: rabbitmq